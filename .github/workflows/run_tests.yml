name: Automated tests

on:
  workflow_dispatch:
    inputs:
      APIName:
        description: APIusername
        required: true
      APIPassword:
        description: APIpassword
        required: true
      UIName:
        description: UIusername
        required: true
      UIPassword:
        description: UIpassword
        required: true
      deployment_target:
        description: Choose target
        required: true
        default: all
        type: choice
        options:
          - all
          - ui
          - api

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: >
          ARTIFACT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Grigory98/AutomationTestsFramework/actions/artifacts?name=allure-results" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/Grigory98/AutomationTestsFramework/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip &&
          REPORT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/Grigory98/AutomationTestsFramework/actions/artifacts?name=github-pages" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/Grigory98/AutomationTestsFramework/actions/artifacts/$REPORT_ID/zip 
          -o pages.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Build with Maven
        run: mvn -B package --file pom.xml -Dmaven.test.skip
      - name: Maven clean install
        run: mvn clean install -Dmaven.test.skip
      - name: Download all workfolow run artifacts
        uses: actions/download-artifact@v3
      - name: Run UI tests
        if: "github.event.inputs.deployment_target == 'ui'"
        run: mvn test -pl ui -Duiusername="${{ github.event.inputs.UIName }}" -Duipassword="${{ github.event.inputs.UIPassword }}"
      - name: Run API tests
        if: "github.event.inputs.deployment_target == 'api'"
        run: mvn test -pl api -Dapiusername="${{ github.event.inputs.APIName }}" -Dapipassword="${{ github.event.inputs.APIPassword }}"
      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: mvn test -Duiusername="${{ github.event.inputs.UIName }}" -Duipassword="${{ github.event.inputs.UIPassword }}" -Dapiusername="${{ github.event.inputs.APIName }}" -Dapipassword="${{ github.event.inputs.APIPassword }}"
      - name: Save allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.0/allure-2.23.0.tgz && sudo tar -zxvf allure-2.23.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.0/bin/allure /usr/bin/allure
      - name: Download all workfolow run artifacts
        uses: actions/download-artifact@v3
      - run: allure generate -c allure-results -o _site
      - name: Save generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path:
            _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9

